// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/roles": {
            "get": {
                "description": "角色管理分页列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "获取角色管理列表"
                ],
                "summary": "角色列表",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint32",
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "uint32",
                        "description": "每页条目数",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "名称",
                        "name": "query[Name]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "description": "按名称排序",
                        "name": "orderBy[Name]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "description": "按 ID 排序",
                        "name": "orderBy[Id]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.PagingResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "通过接收 json body 参数来添加角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "添加角色"
                ],
                "summary": "添加角色",
                "parameters": [
                    {
                        "description": "角色属性",
                        "name": "message",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/v1.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.CommonCreate"
                        }
                    }
                }
            },
            "delete": {
                "description": "通过接收数组 ids json body 参数来删除角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "删除角色"
                ],
                "summary": "删除一个或多个角色",
                "parameters": [
                    {
                        "description": "角色 ids 数组",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CommonDeletesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/admin/roles/{id}": {
            "get": {
                "description": "通过接收 id 参数来获取一个角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "获取一个角色"
                ],
                "summary": "获取一个角色",
                "parameters": [
                    {
                        "maxLength": 26,
                        "minLength": 26,
                        "type": "string",
                        "description": "角色 id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Role"
                        }
                    }
                }
            },
            "put": {
                "description": "通过接收 id 参数和 json body 参数来编辑一个角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "编辑一个角色"
                ],
                "summary": "编辑一个角色",
                "parameters": [
                    {
                        "maxLength": 26,
                        "minLength": 26,
                        "type": "string",
                        "description": "角色 id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "角色属性",
                        "name": "message",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.CommonUpdate"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "anypb.Any": {
            "type": "object",
            "properties": {
                "type_url": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n` + "`" + `path/google.protobuf.Duration` + "`" + `). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme ` + "`" + `http` + "`" + `, ` + "`" + `https` + "`" + `, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, ` + "`" + `https` + "`" + ` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than ` + "`" + `http` + "`" + `, ` + "`" + `https` + "`" + ` (or the empty scheme) might be\nused with implementation specific semantics.",
                    "type": "string"
                },
                "value": {
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "common.CommonCreate": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                }
            }
        },
        "common.CommonDeletesRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.CommonUpdate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                }
            }
        },
        "common.PagingResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/anypb.Any"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "timestamppb.Timestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "integer"
                }
            }
        },
        "v1.CreateRoleRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "v1.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isSystem": {
                    "type": "boolean"
                }
            }
        },
        "v1.UpdateRoleRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Nicehouse (好房) 后台管理系统 API",
	Description:      "本文档描述了后台管理系统微服务接口定义。",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
